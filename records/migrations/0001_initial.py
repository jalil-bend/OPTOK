# Generated by Django 5.1.6 on 2025-04-26 12:33

import django.db.models.deletion
import records.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('docteur', '0001_initial'),
        ('patient', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True)),
                ('details', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='medical_records/%Y/%m/%d/')),
                ('diabetique', models.BooleanField(default=False, verbose_name='Diabétique')),
                ('keratoconique', models.BooleanField(default=False, verbose_name='Kératoconique')),
                ('stade_keratoconique', models.CharField(blank=True, choices=[('fruste', 'Kératocône fruste'), ('stade_1', 'Stade 1'), ('stade_2', 'Stade 2'), ('stade_3', 'Stade 3'), ('stade_4', 'Stade 4')], max_length=10, verbose_name='Stade du kératoconique')),
                ('cataracte', models.BooleanField(default=False, verbose_name='Cataracte')),
                ('cataracte_type', models.CharField(blank=True, choices=[('', '-- Sélectionner --'), ('nucléaire', 'Cataracte nucléaire'), ('corticale', 'Cataracte corticale'), ('sous-capsulaire postérieure', 'Cataracte sous-capsulaire postérieure'), ('congénitale', 'Cataracte congénitale'), ('traumatique', 'Cataracte traumatique'), ('secondaire', 'Cataracte secondaire')], max_length=200, verbose_name='Type de cataracte')),
                ('glaucome', models.BooleanField(default=False, verbose_name='Glaucome')),
                ('glaucome_type', models.CharField(blank=True, choices=[('', '-- Sélectionner --'), ('angle_ouvert', 'Glaucome à angle ouvert'), ('angle_ferme', 'Glaucome à angle fermé')], max_length=20, verbose_name='Type de glaucome')),
                ('uveite', models.BooleanField(default=False, verbose_name='Uvéite')),
                ('uveite_type', models.CharField(blank=True, choices=[('', '-- Sélectionner --'), ('anterieure', 'Uvéite antérieure'), ('intermediaire', 'Uvéite intermédiaire'), ('posterieure', 'Uvéite postérieure'), ('panuveite', 'Panuvéite')], max_length=20, verbose_name="Type d'uvéite")),
                ('conjonctivite', models.BooleanField(default=False, verbose_name='Conjonctivite')),
                ('conjonctivite_type', models.CharField(blank=True, choices=[('', '-- Sélectionner --'), ('bacterienne', 'Conjonctivite bactérienne'), ('virale', 'Conjonctivite virale'), ('allergique', 'Conjonctivite allergique'), ('irritative', 'Conjonctivite irritative'), ('toxique', 'Conjonctivite toxique'), ('autoimmune', 'Conjonctivite auto-immune'), ('neonatale', 'Conjonctivite néonatale')], max_length=20, verbose_name='Type de conjonctivite')),
                ('sclerose', models.BooleanField(default=False, verbose_name='Sclérose')),
                ('sclerose_type', models.CharField(blank=True, choices=[('', '-- Sélectionner --'), ('anterieure', 'Sclérite antérieure'), ('posterieure', 'Sclérite postérieure'), ('episclerite', 'Épisclérite'), ('nodulaire', 'Sclérite nodulaire'), ('necrosante_inflammation', 'Sclérite nécrosante avec inflammation'), ('necrosante_sans_inflammation', 'Sclérite nécrosante sans inflammation (scléromalacie perforante)')], max_length=30, verbose_name='Type de sclérose')),
                ('hypertendu', models.BooleanField(default=False, verbose_name='Hypertendu')),
                ('v3m', models.BooleanField(default=False, verbose_name='V3M')),
                ('description_v3m', models.TextField(blank=True, verbose_name='Description V3M')),
                ('fo', models.BooleanField(default=False, verbose_name='F.O')),
                ('description_fo', models.TextField(blank=True, verbose_name='Description F.O')),
                ('ce', models.BooleanField(default=False, verbose_name='C.E')),
                ('description_ce', models.TextField(blank=True, verbose_name='Description C.E')),
                ('scjr', models.BooleanField(default=False, verbose_name='S/Cj -R/B')),
                ('description_scjr', models.TextField(blank=True, verbose_name='Description S/Cj -R/B')),
                ('vi', models.BooleanField(default=False, verbose_name='V.I')),
                ('description_vi', models.TextField(blank=True, verbose_name='Description V.I')),
                ('ablation_fils', models.BooleanField(default=False, verbose_name='Ablation de Fils')),
                ('description_ablation_fils', models.TextField(blank=True, verbose_name='Description Ablation de Fils')),
                ('echo_a', models.BooleanField(default=False, verbose_name='Echo A')),
                ('description_echo_a', models.TextField(blank=True, verbose_name='Description Echo A')),
                ('echo_b', models.BooleanField(default=False, verbose_name='Echo B')),
                ('description_echo_b', models.TextField(blank=True, verbose_name='Description Echo B')),
                ('skiascopie', models.BooleanField(default=False, verbose_name='Skiascopie')),
                ('description_skiascopie', models.TextField(blank=True, verbose_name='Description Skiascopie')),
                ('laser_argon', models.BooleanField(default=False, verbose_name='Laser Argon')),
                ('description_laser_argon', models.TextField(blank=True, verbose_name='Description Laser Argon')),
                ('laser_yag', models.BooleanField(default=False, verbose_name='Laser YAG')),
                ('description_laser_yag', models.TextField(blank=True, verbose_name='Description Laser YAG')),
                ('angio', models.BooleanField(default=False, verbose_name='Angio')),
                ('description_angio', models.TextField(blank=True, verbose_name='Description Angio')),
                ('lentille_therap', models.BooleanField(default=False, verbose_name='Lentille Therap')),
                ('description_lentille_therap', models.TextField(blank=True, verbose_name='Description Lentille Therap')),
                ('bouchons_lacrym', models.BooleanField(default=False, verbose_name='Bouchons Lacrym')),
                ('description_bouchons_lacrym', models.TextField(blank=True, verbose_name='Description Bouchons Lacrym')),
                ('prochain_rendez_vous', models.DateField(blank=True, null=True, verbose_name='Prochain rendez-vous')),
                ('lentille_souple', models.BooleanField(default=False, verbose_name='Lentille souple')),
                ('lentille_souple_spherique', models.BooleanField(default=False, verbose_name='Lentille souple sphérique')),
                ('lentille_souple_torique', models.BooleanField(default=False, verbose_name='Lentille souple torique')),
                ('lentille_rpg', models.BooleanField(default=False, verbose_name='Lentille RPG')),
                ('lrpg_spherique', models.BooleanField(default=False, verbose_name='LRPG sphérique')),
                ('lrpg_torique_ant', models.BooleanField(default=False, verbose_name='LRPG torique face antérieure')),
                ('lrpg_torique_post', models.BooleanField(default=False, verbose_name='LRPG torique face postérieure')),
                ('lrpg_bitorique', models.BooleanField(default=False, verbose_name='LRPG bi-torique')),
                ('lentille_sclerale', models.BooleanField(default=False, verbose_name='Lentille sclérale')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_records', to='docteur.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='patient.patient')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicalImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('topographie', 'Topographie'), ('oct', 'OCT'), ('lampe_a_fente', 'Lampe à fente')], max_length=20)),
                ('image', models.ImageField(upload_to='medical_images/%Y/%m/%d/', validators=[records.validators.validate_image_type])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='records.medicalrecord')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('od_sph', models.CharField(blank=True, max_length=10)),
                ('od_cyl', models.CharField(blank=True, max_length=10)),
                ('od_axe', models.CharField(blank=True, max_length=10)),
                ('od_add', models.CharField(blank=True, max_length=10)),
                ('og_sph', models.CharField(blank=True, max_length=10)),
                ('og_cyl', models.CharField(blank=True, max_length=10)),
                ('og_axe', models.CharField(blank=True, max_length=10)),
                ('og_add', models.CharField(blank=True, max_length=10)),
                ('od_dia', models.CharField(blank=True, max_length=10)),
                ('od_rc', models.CharField(blank=True, max_length=10)),
                ('og_dia', models.CharField(blank=True, max_length=10)),
                ('og_rc', models.CharField(blank=True, max_length=10)),
                ('od_sph_lc', models.CharField(blank=True, max_length=10)),
                ('od_cyl_lc', models.CharField(blank=True, max_length=10)),
                ('od_axe_lc', models.CharField(blank=True, max_length=10)),
                ('og_sph_lc', models.CharField(blank=True, max_length=10)),
                ('og_cyl_lc', models.CharField(blank=True, max_length=10)),
                ('og_axe_lc', models.CharField(blank=True, max_length=10)),
                ('prescription_details', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='records.medicalrecord')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
