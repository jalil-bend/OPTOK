# Generated by Django 5.0 on 2025-04-30 11:29

import django.db.models.deletion
import patient.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('docteur', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=patient.models.medical_image_path)),
                ('image_type', models.CharField(choices=[('OCT', 'OCT'), ('Scanner', 'Scanner'), ('Topographie', 'Topographie'), ('IRM', 'IRM')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='FicheClinique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_modification', models.DateTimeField(auto_now_add=True)),
                ('antecedents', models.TextField(blank=True, null=True)),
                ('diagnostic', models.TextField(blank=True, null=True)),
                ('traitement', models.TextField(blank=True, null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='docteur.doctor')),
            ],
            options={
                'ordering': ['-date_modification'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nom')),
                ('last_name', models.CharField(max_length=50, verbose_name='Prénom')),
                ('birth_date', models.DateField(verbose_name='Date de naissance')),
                ('profession', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profession')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone', models.CharField(max_length=15, verbose_name='Numéro de téléphone')),
                ('birth_place', models.CharField(max_length=100, verbose_name='Lieu de naissance')),
                ('remarks', models.CharField(blank=True, max_length=300, null=True, verbose_name='Remarques')),
                ('diagnosis', models.CharField(blank=True, max_length=300, null=True, verbose_name='Diagnostic')),
                ('prescription', models.CharField(blank=True, max_length=300, null=True, verbose_name='Traitement')),
                ('sphere_right_vl', models.FloatField(blank=True, null=True, verbose_name='Sphère OD VL')),
                ('cylinder_right_vl', models.FloatField(blank=True, null=True, verbose_name='Cylindre OD VL')),
                ('axis_right_vl', models.IntegerField(blank=True, null=True, verbose_name='Axe OD VL ')),
                ('sphere_left_vl', models.FloatField(blank=True, null=True, verbose_name='Sphère OG VL')),
                ('cylinder_left_vl', models.FloatField(blank=True, null=True, verbose_name='Cylindre OG VL')),
                ('axis_left_vl', models.IntegerField(blank=True, null=True, verbose_name='Axe OG VL')),
                ('sphere_right_vp', models.FloatField(blank=True, null=True, verbose_name='Sphère OD VP')),
                ('cylinder_right_vp', models.FloatField(blank=True, null=True, verbose_name='Cylindre OD VP')),
                ('axis_right_vp', models.IntegerField(blank=True, null=True, verbose_name='Axe OD VP')),
                ('sphere_left_vp', models.FloatField(blank=True, null=True, verbose_name='Sphère OG VP')),
                ('cylinder_left_vp', models.FloatField(blank=True, null=True, verbose_name='Cylindre OG VP')),
                ('axis_left_vp', models.IntegerField(blank=True, null=True, verbose_name='Axe OG VP')),
                ('consultation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date de consultation')),
                ('next_appointment', models.DateTimeField(blank=True, null=True, verbose_name='Prochain rendez-vous')),
                ('has_account', models.BooleanField(default=False)),
                ('access_password', models.CharField(blank=True, max_length=12, null=True)),
                ('doctors', models.ManyToManyField(related_name='patients', to='docteur.doctor')),
            ],
        ),
    ]
